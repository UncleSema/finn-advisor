name: Deployment

on:
  push:
    branches:
      - main

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_NAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Service docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_IMAGE }}:latest

      - name: Build and push Liquibase docker image
        uses: docker/build-push-action@v3
        with:
          context: db-migrations
          push: true
          tags: ${{ secrets.DOCKERHUB_IMAGE_LIQUIBASE }}:latest

  migrations_n_deployment:
    name: Deploy on prod
    runs-on: ubuntu-latest
    needs: push_to_registry
    environment: prod
    steps:
      - name: Deploy via SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_ADDRESS }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Stop all running Docker Containers
            docker kill $(docker ps -qf "label=finn-advisor")

            # Pull the Docker Image 
            docker pull ${{ secrets.DOCKERHUB_IMAGE }}:latest
            docker pull ${{ secrets.DOCKERHUB_IMAGE_LIQUIBASE }}:latest
            
            # Free up space
            docker image prune
            docker container prune

            # Run migrations 
            docker run -d -e "DATABASE_URL=${{ secrets.DB_URL }}" -e "DATABASE_USER=${{ secrets.DB_USER }}" -e "DATABASE_PASSWORD=${{ secrets.DB_PASSWORD }}" -e DATABASE_SCHEMA=${{ secrets.DB_SCHEMA }} --network=app ${{ secrets.DOCKERHUB_IMAGE_LIQUIBASE }}:latest

            # Run service
            docker run -d -e "VK_BOT_TOKEN=${{ secrets.VK_BOT_TOKEN }}" -e "VK_GROUP_ID=${{ secrets.VK_GROUP_ID }}" -e "DB_HOST=${{ secrets.DB_HOST }}" -e "DB_NAME=${{ secrets.DB_NAME }}" -e "DB_USER=${{ secrets.DB_USER }}" -e "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" -e "REDIS_HOST=${{ secrets.REDIS_HOST }}" -e "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" -e "REDIS_DATABASE=${{ secrets.REDIS_DATABASE }}" --network=app -l finn-advisor ${{ secrets.DOCKERHUB_IMAGE }}:latest
